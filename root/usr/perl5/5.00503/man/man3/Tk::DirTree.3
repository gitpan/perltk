.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH DIRTREE 1 "perl 5.005, patch 03" "30/Dec/2000" "User Contributed Perl Documentation"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
Tk::DirTree \- Create and manipulate DirTree widgets
.SH "SYNOPSIS"
\ \ \ \ \fBuse Tk::DirTree;\fR
.PP
\ \ \ \ \fI$dirtree\fR = \fI$parent\fR\->\fBDirTree\fR(?\fIoptions\fR?);
.SH "SUPER\-CLASS"
The \fBDirTree\fR class is derived from the Tree class and inherits
all the methods, options and subwidgets of its super-class.
.SH "STANDARD OPTIONS"
\fBTree\fR supports all the standard options of a Tree widget.  See
the \fITk::options\fR manpage for details on the standard options.
.SH "WIDGET\-SPECIFIC OPTIONS"
.Ip "Name:		\fBbrowseCmd\fR" 4
.Ip "Class:		\fBBrowseCmd\fR" 4
.Ip "Switch:		\fB\-browsecmd\fR" 4
Specifies a callback to call whenever the user browses on a directory
(usually by single-clicking on the name of the directory). The callback
is called with one argument, the complete pathname of the directory.
.Ip "Name:		\fBcommand\fR" 4
.Ip "Class:		\fBCommand\fR" 4
.Ip "Switch:		\fB\-command\fR" 4
Specifies the callback to be called when the user activates on a directory
(usually by double-clicking on the name of the directory). The callback
is called with one argument, the complete pathname of the directory.
.Ip "Name:		\fBdircmd\fR" 4
.Ip "Class:		\fBDirCmd\fR" 4
.Ip "Switch:		\fB\-dircmd\fR" 4
Specifies the callback to be called when a directory listing is needed
for a particular directory. If this option is not specified, by
default the DirTree widget will attempt to read the directory as a
Unix directory. On special occasions, the application programmer may
want to supply a special method for reading directories: for example,
when he needs to list remote directories. In this case, the \fB\-dircmd\fR
option can be used. The specified callback accepts two arguments: the
first is the name of the directory to be listed; the second is a
Boolean value indicating whether hidden sub-directories should be
listed. This callback returns a list of names of the sub-directories of
this directory. For example:
.Sp
.Vb 5
\&    sub read_dir {
\&        my( $dir, $showhidden ) = @_;
\&        return( qw/DOS NORTON WINDOWS/ ) if $dir eq "C:\e\e";
\&        return();
\&    }
.Ve
.Ip "Name:		\fBshowHidden\fR" 4
.Ip "Class:		\fBShowHidden\fR" 4
.Ip "Switch:		\fB\-showhidden\fR" 4
Specifies whether hidden directories should be shown. By default, a
directory name starting with a period \*(L".\*(R" is considered as a hidden
directory. This rule can be overridden by supplying an alternative
\fB\-dircmd\fR option.
.Ip "Name:		\fBdirectory\fR" 4
.Ip "Class:		\fBDirectory\fR" 4
.Ip "Switch:		\fB\-directory\fR" 4
.Ip "Alias:		\fB\-value\fR" 4
Specifies the name of the current directory to be displayed in the
DirTree widget.
.SH "DESCRIPTION"
The \fBDirTree\fR constructor method creates a new window (given by the \f(CW$dirtree\fR
argument) and makes it into a DirTree widget.  Additional options,
described above, may be specified on the command line or in the
option database to configure aspects of the DirTree such as its
cursor and relief.  The DirTree widget displays a list view of a
directory, its previous directories and its sub-directories. The
user can choose one of the directories displayed in the list or
change to another directory.
.SH "WIDGET METHODS"
The \fBDirTree\fR method creates a widget object.
This object supports the \fBconfigure\fR and \fBcget\fR methods
described in the \fITk::options\fR manpage which can be used to enquire and
modify the options described above.
The widget also inherits all the methods provided by the generic
Tk::Widget class.
.PP
The following additional methods are available for DirTree widgets:
.Ip "\fI$dirtree\fR\->\fBchdir\fR(\fIdir\fR)" 4
Change the current directory to \fIdir\fR.
.SH "BINDINGS"
The mouse and keyboard bindings of the DirTree widget are the same as
the bindings of the Tree widget.
.SH "KEYWORDS"
directory, tree, tix
.SH "SEE ALSO"
Tk::Tree
Tk::HList
.SH "AUTHOR"
Perl/TK version by Chris Dean <ctdean@cogit.com>.  Original Tcl/Tix
version by Ioi Kim Lam.

.rn }` ''
.IX Title "DIRTREE 1"
.IX Name "Tk::DirTree - Create and manipulate DirTree widgets"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "SUPER\-CLASS"

.IX Header "STANDARD OPTIONS"

.IX Header "WIDGET\-SPECIFIC OPTIONS"

.IX Item "Name:		\fBbrowseCmd\fR"

.IX Item "Class:		\fBBrowseCmd\fR"

.IX Item "Switch:		\fB\-browsecmd\fR"

.IX Item "Name:		\fBcommand\fR"

.IX Item "Class:		\fBCommand\fR"

.IX Item "Switch:		\fB\-command\fR"

.IX Item "Name:		\fBdircmd\fR"

.IX Item "Class:		\fBDirCmd\fR"

.IX Item "Switch:		\fB\-dircmd\fR"

.IX Item "Name:		\fBshowHidden\fR"

.IX Item "Class:		\fBShowHidden\fR"

.IX Item "Switch:		\fB\-showhidden\fR"

.IX Item "Name:		\fBdirectory\fR"

.IX Item "Class:		\fBDirectory\fR"

.IX Item "Switch:		\fB\-directory\fR"

.IX Item "Alias:		\fB\-value\fR"

.IX Header "DESCRIPTION"

.IX Header "WIDGET METHODS"

.IX Item "\fI$dirtree\fR\->\fBchdir\fR(\fIdir\fR)"

.IX Header "BINDINGS"

.IX Header "KEYWORDS"

.IX Header "SEE ALSO"

.IX Header "AUTHOR"

