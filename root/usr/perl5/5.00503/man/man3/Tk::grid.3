.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH GRID 1 "perl 5.005, patch 03" "30/Dec/2000" "User Contributed Perl Documentation"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
Tk::grid \- Geometry manager that arranges widgets in a grid
.SH "SYNOPSIS"
\ \ \ \ \fI$widget\fR\->\fBgrid\fR?(?\fIwidget\fR ...,? ?\fIarg\fR ?...>?)?
.PP
\ \ \ \ \fI$widget\fR\->\fBgrid\fR\fIOption\fR?(\fIarg\fR ?,\fIarg\fR ...?)?
.SH "DESCRIPTION"
The \fBgrid\fR method is used to communicate with the grid
geometry manager that arranges widgets in rows and columns inside
of another window, called the geometry master (or master window).
The \fBgrid\fR method can have any of several forms, depending
on the \fIoption\fR argument:
.Ip "\fI$slave\fR\->\fBgrid\fR(?\fI$slave, ...\fR??, \fIoptions\fR?)" 4
The arguments consist of the optional references to more slave windows
followed by pairs of arguments that specify how to manage the slaves.
The characters \fB\-\fR,  \fBx\fR and \fB^\fR,
can be specified instead of a window reference to alter the default
location of a \fI$slave\fR, as described in the section on \fI\s-1RELATIVE\s0 \s-1PLACEMENT\s0\fR, below.
.Sp
If any of the slaves are already managed by the geometry manager
then any unspecified options for them retain their previous values rather
than receiving default values.
.Sp
The following options are supported:
.Ip "\fB\-column\fR => \fIn\fR" 12
Insert the \fI$slave\fR so that it occupies the \fIn\fRth column in the grid.
Column numbers start with 0.  If this option is not supplied, then the
\fI$slave\fR is arranged just to the right of previous slave specified on this
call to \fBgrid\fR, or column \*(L"0\*(R" if it is the first slave.  For each
\fBx\fR that immediately precedes the \fI$slave\fR, the column position
is incremented by one.  Thus the \fBx\fR represents a blank column
for this row in the grid.
.Ip "\fB\-columnspan\fR => \fIn\fR" 12
Insert the slave so that it occupies \fIn\fR columns in the grid.
The default is one column, unless the window name is followed by a
\fB\-\fR, in which case the columnspan is incremented once for each immediately
following \fB\-\fR.
.Ip "\fB\-in\fR => \fI$other\fR" 12
Insert the \fIslave\fR\|(s) in the master
window given by \fI$other\fR.  The default is the first slave's
parent window.
.Ip "\fB\-ipadx\fR => \fIamount\fR" 12
The \fIamount\fR specifies how much horizontal internal padding to
leave on each side of the \fIslave\fR\|(s).  This is space is added
inside the \fIslave\fR\|(s) border.
The \fIamount\fR must be a valid screen distance, such as \fB2\fR or \fB\*(R'.5c\*(R'\fR.
It defaults to 0.
.Ip "\fB\-ipady\fR => \fIamount\fR" 12
The \fIamount\fR specifies how much vertical internal padding to
leave on on the top and bottom of the \fIslave\fR\|(s).
This space is added inside the \fIslave\fR\|(s) border.
The \fIamount\fR  defaults to 0.
.Ip "\fB\-padx\fR => \fIamount\fR" 12
The \fIamount\fR specifies how much horizontal external padding to
leave on each side of the \fIslave\fR\|(s), in screen units.
The \fIamount\fR defaults to 0.
This space is added outside the \fIslave\fR\|(s) border.
.Ip "\fB\-pady\fR => \fIamount\fR" 12
The \fIamount\fR specifies how much vertical external padding to
leave on the top and bottom of the \fIslave\fR\|(s), in screen units.
The \fIamount\fR defaults to 0.
This space is added outside the \fIslave\fR\|(s) border.
.Ip "\fB\-row\fR => \fIn\fR" 12
Insert the slave so that it occupies the \fIn\fRth row in the grid.
Row numbers start with 0.  If this option is not supplied, then the
slave is arranged on the same row as the previous slave specified on this
call to \fBgrid\fR, or the first unoccupied row if this is the first slave.
.Ip "\fB\-rowspan\fR => \fIn\fR" 12
Insert the slave so that it occupies \fIn\fR rows in the grid.
The default is one row.  If the next \fBgrid\fR method contains
\fB^\fR characters instead of \fI$slave\fRs that line up with the columns
of this \fI$slave\fR, then the \fBrowspan\fR of this \fI$slave\fR is
extended by one.
.Ip "\fB\-sticky\fR => \fIstyle\fR" 12
If a slave's cell is larger than its requested dimensions, this
option may be used to position (or stretch) the slave within its cell.
\fIStyle\fR  is a string that contains zero or more of the characters
\fBn\fR, \fBs\fR, \fBe\fR or \fBw\fR.
The string can optionally contain spaces or
commas, but they are ignored.  Each letter refers to a side (north, south,
east, or west) that the slave will \*(L"stick\*(R" to.  If both \fBn\fR and \fBs\fR (or
\fBe\fR and \fBw\fR) are specified, the slave will be stretched to fill the entire
height (or width) of its cavity.  The \fBsticky\fR option subsumes the
combination of \fB\-anchor\fR and \fB\-fill\fR that is used by pack.
The default is \fB'\*(R'\fR, which causes the slave to be centered in its cavity,
at its requested size.
.Ip "\fI$master\fR\->\fBgridBbox\fR(?\fIcolumn, row\fR,? ?\fIcolumn2, row2\fR?)" 4
With no arguments,
the bounding box (in pixels) of the grid is returned.
The return value consists of 4 integers.  The first two are the pixel
offset from the master window (x then y) of the top-left corner of the
grid, and the second two integers are the width and height of the grid,
also in pixels.  If a single \fIcolumn\fR and \fIrow\fR is specified on
the command line, then the bounding box for that cell is returned, where the
top left cell is numbered from zero.  If both \fIcolumn\fR and \fIrow\fR
arguments are specified, then the bounding box spanning the rows and columns
indicated is returned.
.Ip "\fI$master\fR\->\fBgridColumnconfigure\fR(\fIindex\fR?, \fI\-option\fR=>\fIvalue, ...\fR?)" 4
Query or set the column properties of the \fIindex\fR column of the
geometry master, \fI$master\fR.
The valid options are \fB\-minsize\fR, \fB\-weight\fR and \fB\-pad\fR.
If one or more options are provided, then \fIindex\fR may be given as
a list of column indices to which the configuration options will operate on.
The \fB\-minsize\fR option sets the minimum size, in screen units,
that will be permitted for this column.
The \fB\-weight\fR option (an integer value)
sets the relative weight for apportioning
any extra spaces among
columns.
A weight of zero (0) indicates the column will not deviate from its requested
size.  A column whose weight is two will grow at twice the rate as a column
of weight one when extra space is allocated to the layout.
The \fB\-pad\fR option specifies the number of screen units that will be
added to the largest window contained completely in that column when the
grid geometry manager requests a size from the containing window.
If only an option is specified, with no value,
the current value of that option is returned.
If only the master window and index is specified, all the current settings
are returned in an list of \*(L"\-option value\*(R" pairs.
.Ip "\fI$slave\fR\->\fBgridConfigure\fR(?\fI$slave, ...\fR?, \fIoptions\fR?)" 4
The same as \fBgrid\fR method.
.Ip "\fI$slave\fR\->\fBgridForget\fR?(\fI$slave, ...\fR)?" 4
Removes each of the \fI$slave\fRs from grid for its
master and unmaps their windows.
The slaves will no longer be managed by the grid geometry manager.
The configuration options for that window are forgotten, so that if the
slave is managed once more by the grid geometry manager, the initial
default settings are used.
.Ip "\fI$slave\fR\->\fBgridInfo\fR" 4
Returns a list whose elements are the current configuration state of
the slave given by \fI$slave\fR in the same option-value form that
might be specified to \fBgridConfigure\fR.
The first two elements of the list are ``\fB\-in\fR=>\fI$master\fR'\*(R' where
\fI$master\fR is the slave's master.
.Ip "\fI$master\fR\->\fBgridLocation\fR(\fIx, y\fR)" 4
Given  \fIx\fR and \fIy\fR values in screen units relative to the master window,
the column and row number at that \fIx\fR and \fIy\fR location is returned.
For locations that are above or to the left of the grid, \fB\-1\fR is returned.
.Ip "\fI$master\fR\->\fBgridPropagate\fR?(\fIboolean\fR)?" 4
If \fIboolean\fR has a true boolean value such as \fB1\fR or \fBon\fR
then propagation is enabled for \fI$master\fR, which must be a window
name (see the section on \fI\s-1GEOMETRY\s0 \s-1PROPAGATION\s0\fR below).
If \fIboolean\fR has a false boolean value then propagation is
disabled for \fI$master\fR.
In either of these cases an empty string is returned.
If \fIboolean\fR is omitted then the method returns \fB0\fR or
\fB1\fR to indicate whether propagation is currently enabled
for \fI$master\fR.
Propagation is enabled by default.
.Ip "\fI$master\fR\->\fBgridRowconfigure\fR(\fIindex\fR?, \fI\-option\fR=>\fIvalue, ...\fR?)" 4
Query or set the row properties of the \fIindex\fR row of the
geometry master, \fI$master\fR.
The valid options are \fB\-minsize\fR, \fB\-weight\fR and \fB\-pad\fR.
If one or more options are provided, then \fIindex\fR may be given as
a list of row indeces to which the configuration options will operate on.
The \fB\-minsize\fR option sets the minimum size, in screen units,
that will be permitted for this row.
The \fB\-weight\fR option (an integer value)
sets the relative weight for apportioning
any extra spaces among
rows.
A weight of zero (0) indicates the row will not deviate from its requested
size.  A row whose weight is two will grow at twice the rate as a row
of weight one when extra space is allocated to the layout.
The \fB\-pad\fR option specifies the number of screen units that will be
added to the largest window contained completely in that row when the
grid geometry manager requests a size from the containing window.
If only an option is specified, with no value,
the current value of that option is returned.
If only the master window and index is specified, all the current settings
are returned in an list of \*(L"option-value\*(R" pairs.
.Ip "\fI$slave\fR\->\fBgridRemove\fR?(\fI$slave, ...\fR)?" 4
Removes each of the \fI$slave\fRs from grid for its
master and unmaps their windows.
The slaves will no longer be managed by the grid geometry manager.
However, the configuration options for that window are remembered,
so that if the
slave is managed once more by the grid geometry manager, the previous
values are retained.
.Ip "\fI$master\fR\->\fBgridSize\fR" 4
Returns the size of the grid (in columns then rows) for \fI$master\fR.
The size is determined either by the \fI$slave\fR occupying the largest
row or column, or the largest column or row with a \fB\-minsize\fR,
\fB\-weight\fR, or \fB\-pad\fR that is non-zero.
.Ip "\fI$master\fR\->\fBgridSlaves\fR?(\fI\-option\fR=>\fIvalue\fR)?" 4
If no options are supplied, a list of all of the slaves in \fI$master\fR
are returned, most recently manages first.
\fI\-option\fR can be either \fB\-row\fR or \fB\-column\fR which
causes only the slaves in the row (or column) specified by \fIvalue\fR
to be returned.
.SH "RELATIVE PLACEMENT"
The \fBgrid\fR method contains a limited set of capabilities that
permit layouts to be created without specifying the row and column
information for each slave.  This permits slaves to be rearranged,
added, or removed without the need to explicitly specify row and
column information.
When no column or row information is specified for a \fI$slave\fR,
default values are chosen for
\fB\-column\fR, \fB\-row\fR, \fB\-columnspan\fR and \fB\-rowspan\fR
at the time the \fI$slave\fR is managed. The values are chosen
based upon the current layout of the grid, the position of the \fI$slave\fR
relative to other \fI$slave\fRs in the same grid method, and the presence
of the characters \fB\-\fR, \fB^\fR, and \fB^\fR in \fBgrid\fR
method where \fI$slave\fR names are normally expected.
.Ip "\fB\-\fR" 4
This increases the columnspan of the \fI$slave\fR to the left.  Several
\fB\-\fR's in a row will successively increase the columnspan. A \fB\-\fR
may not follow a \fB^\fR or a \fBx\fR.
.Ip "\fBx\fR" 4
This leaves an empty column between the \fI$slave\fR on the left and
the \fI$slave\fR on the right.
.Ip "\fB^\fR" 4
This extends the \fB\-rowspan\fR of the \fI$slave\fR above the \fB^\fR's
in the grid.  The number of \fB^\fR's in a row must match the number of
columns spanned by the \fI$slave\fR above it.
.SH "THE GRID ALGORITHM"
The grid geometry manager lays out its slaves in three steps.
In the first step, the minimum size needed to fit all of the slaves
is computed, then (if propagation is turned on), a request is made
of the master window to become that size.
In the second step, the requested size is compared against the actual size
of the master.  If the sizes are different, then space is added to or taken
away from the layout as needed.
For the final step, each slave is positioned in its \fIrow\fR\|(s) and \fIcolumn\fR\|(s)
based on the setting of its \fIsticky\fR flag.
.PP
To compute the minimum size of a layout, the grid geometry manager
first looks at all slaves whose columnspan and rowspan values are one,
and computes the nominal size of each row or column to be either the
\fIminsize\fR for that row or column, or the sum of the \fIpad\fRding
plus the size of the largest slave, whichever is greater.  Then the
slaves whose rowspans or columnspans are greater than one are
examined.  If a group of rows or columns need to be increased in size
in order to accommodate these slaves, then extra space is added to each
row or column in the group according to its \fIweight\fR.  For each
group whose weights are all zero, the additional space is apportioned
equally.
.PP
For masters whose size is larger than the requested layout, the additional
space is apportioned according to the row and column weights.  If all of
the weights are zero, the layout is centered within its master.
For masters whose size is smaller than the requested layout, space is taken
away from columns and rows according to their weights.  However, once a
column or row shrinks to its minsize, its weight is taken to be zero.
If more space needs to be removed from a layout than would be permitted, as
when all the rows or columns are at there minimum sizes, the layout is
clipped on the bottom and right.
.SH "GEOMETRY PROPAGATION"
The grid geometry manager normally computes how large a master must be to
just exactly meet the needs of its slaves, and it sets the
requested width and height of the master to these dimensions.
This causes geometry information to propagate up through a
window hierarchy to a top-level window so that the entire
sub-tree sizes itself to fit the needs of the leaf windows.
However, the \fBgridPropagate\fR method may be used to
turn off propagation for one or more masters.
If propagation is disabled then grid will not set
the requested width and height of the master window.
This may be useful if, for example, you wish for a master
window to have a fixed size that you specify.
.SH "RESTRICTIONS ON MASTER WINDOWS"
The master for each slave must either be the slave's parent
(the default) or a descendant of the slave's parent.
This restriction is necessary to guarantee that the
slave can be placed over any part of its master that is
visible without danger of the slave being clipped by its parent.
In addition, all slaves in one call to \fBgrid\fR must have the same master.
.SH "STACKING ORDER"
If the master for a slave is not its parent then you must make sure
that the slave is higher in the stacking order than the master.
Otherwise the master will obscure the slave and it will appear as
if the slave hasn't been managed correctly.
The easiest way to make sure the slave is higher than the master is
to create the master window first:  the most recently created window
will be highest in the stacking order.
.SH "CREDITS"
The \fBgrid\fR method is based on ideas taken from the \fIGridBag\fR
geometry manager written by Doug. Stein, and the \fBblt_table\fR geometry
manager, written by George Howlett.
.SH "SEE ALSO"
Tk::form
Tk::pack
Tk::place
.SH "KEYWORDS"
geometry manager, location, grid, cell, propagation, size, pack,
master, slave

.rn }` ''
.IX Title "GRID 1"
.IX Name "Tk::grid - Geometry manager that arranges widgets in a grid"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Item "\fI$slave\fR\->\fBgrid\fR(?\fI$slave, ...\fR??, \fIoptions\fR?)"

.IX Item "\fB\-column\fR => \fIn\fR"

.IX Item "\fB\-columnspan\fR => \fIn\fR"

.IX Item "\fB\-in\fR => \fI$other\fR"

.IX Item "\fB\-ipadx\fR => \fIamount\fR"

.IX Item "\fB\-ipady\fR => \fIamount\fR"

.IX Item "\fB\-padx\fR => \fIamount\fR"

.IX Item "\fB\-pady\fR => \fIamount\fR"

.IX Item "\fB\-row\fR => \fIn\fR"

.IX Item "\fB\-rowspan\fR => \fIn\fR"

.IX Item "\fB\-sticky\fR => \fIstyle\fR"

.IX Item "\fI$master\fR\->\fBgridBbox\fR(?\fIcolumn, row\fR,? ?\fIcolumn2, row2\fR?)"

.IX Item "\fI$master\fR\->\fBgridColumnconfigure\fR(\fIindex\fR?, \fI\-option\fR=>\fIvalue, ...\fR?)"

.IX Item "\fI$slave\fR\->\fBgridConfigure\fR(?\fI$slave, ...\fR?, \fIoptions\fR?)"

.IX Item "\fI$slave\fR\->\fBgridForget\fR?(\fI$slave, ...\fR)?"

.IX Item "\fI$slave\fR\->\fBgridInfo\fR"

.IX Item "\fI$master\fR\->\fBgridLocation\fR(\fIx, y\fR)"

.IX Item "\fI$master\fR\->\fBgridPropagate\fR?(\fIboolean\fR)?"

.IX Item "\fI$master\fR\->\fBgridRowconfigure\fR(\fIindex\fR?, \fI\-option\fR=>\fIvalue, ...\fR?)"

.IX Item "\fI$slave\fR\->\fBgridRemove\fR?(\fI$slave, ...\fR)?"

.IX Item "\fI$master\fR\->\fBgridSize\fR"

.IX Item "\fI$master\fR\->\fBgridSlaves\fR?(\fI\-option\fR=>\fIvalue\fR)?"

.IX Header "RELATIVE PLACEMENT"

.IX Item "\fB\-\fR"

.IX Item "\fBx\fR"

.IX Item "\fB^\fR"

.IX Header "THE GRID ALGORITHM"

.IX Header "GEOMETRY PROPAGATION"

.IX Header "RESTRICTIONS ON MASTER WINDOWS"

.IX Header "STACKING ORDER"

.IX Header "CREDITS"

.IX Header "SEE ALSO"

.IX Header "KEYWORDS"

